name: Docker Build & Push

on:
  push:
    branches: ["main"]
    tags: ["v*"]     # при пуше тега v1.0.0 сделается отдельный тег образа

env:
  IMAGE_NAME: maxim7777ma/mini-crm-repair

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      # страховка: если секретов нет — падаем с понятным текстом
      - name: Assert secrets exist
        run: |
          [ -n "${{ secrets.DOCKERHUB_USERNAME }}" ] || (echo "Missing secret: DOCKERHUB_USERNAME" && exit 1)
          [ -n "${{ secrets.DOCKERHUB_TOKEN }}" ]    || (echo "Missing secret: DOCKERHUB_TOKEN" && exit 1)

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # формируем теги: latest (для ветки main) + sha; для релизных тегов — vX.Y.Z
      - name: Compute image tags
        id: meta
        run: |
          SHA_TAG=${GITHUB_SHA}
          if [ "${GITHUB_REF_TYPE}" = "tag" ]; then
            REF_TAG=${GITHUB_REF_NAME}
            echo "tags=${{ env.IMAGE_NAME }}:${REF_TAG},${{ env.IMAGE_NAME }}:${SHA_TAG}" >> "$GITHUB_OUTPUT"
          else
            echo "tags=${{ env.IMAGE_NAME }}:latest,${{ env.IMAGE_NAME }}:${SHA_TAG}" >> "$GITHUB_OUTPUT"
          fi

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
